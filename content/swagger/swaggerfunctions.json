{
  "swagger" : "2.0",
  "info" : {
    "description" : "This provides the REST API for Pulsar Functions operations",
    "version" : "v3",
    "title" : "Pulsar Functions REST API",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath" : "/admin/v3",
  "tags" : [ {
    "name" : "functions"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/functions/connectors" : {
      "get" : {
        "tags" : [ "functions" ],
        "summary" : "Fetches a list of supported Pulsar IO connectors currently running in cluster mode",
        "description" : "",
        "operationId" : "getConnectorsList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "408" : {
            "description" : "Request timeout"
          }
        },
        "deprecated" : true
      }
    },
    "/functions/{tenant}/{namespace}" : {
      "get" : {
        "tags" : [ "functions" ],
        "summary" : "Lists all Pulsar Functions currently deployed in a given namespace",
        "description" : "",
        "operationId" : "listFunctions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}" : {
      "get" : {
        "tags" : [ "functions" ],
        "summary" : "Fetches information about a Pulsar Function currently running in cluster mode",
        "description" : "",
        "operationId" : "getFunctionInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FunctionConfig"
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "404" : {
            "description" : "The function doesn't exist"
          },
          "408" : {
            "description" : "Request timeout"
          }
        }
      },
      "post" : {
        "tags" : [ "functions" ],
        "summary" : "Creates a new Pulsar Function in cluster mode",
        "description" : "",
        "operationId" : "registerFunction",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Pulsar Function successfully created"
          },
          "400" : {
            "description" : "Invalid request (function already exists, etc.)"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "408" : {
            "description" : "Request timeout"
          }
        }
      },
      "put" : {
        "tags" : [ "functions" ],
        "summary" : "Updates a Pulsar Function currently running in cluster mode",
        "description" : "",
        "operationId" : "updateFunction",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Pulsar Function successfully updated"
          },
          "400" : {
            "description" : "Invalid request (function doesn't exist, etc.)"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          }
        }
      },
      "delete" : {
        "tags" : [ "functions" ],
        "summary" : "Deletes a Pulsar Function currently running in cluster mode",
        "description" : "",
        "operationId" : "deregisterFunction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The function was successfully deleted"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "404" : {
            "description" : "The function doesn't exist"
          },
          "408" : {
            "description" : "Request timeout"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/restart" : {
      "post" : {
        "tags" : [ "functions" ],
        "summary" : "Restart all function instances",
        "description" : "",
        "operationId" : "restartFunction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request"
          },
          "404" : {
            "description" : "The function does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/start" : {
      "post" : {
        "tags" : [ "functions" ],
        "summary" : "Start all function instances",
        "description" : "",
        "operationId" : "startFunction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request"
          },
          "404" : {
            "description" : "The function does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/state/{key}" : {
      "get" : {
        "tags" : [ "functions" ],
        "summary" : "Fetch the current state associated with a Pulsar Function",
        "description" : "",
        "operationId" : "getFunctionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FunctionState"
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "404" : {
            "description" : "The key does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/stats" : {
      "get" : {
        "tags" : [ "functions" ],
        "summary" : "Displays the stats of a Pulsar Function",
        "description" : "",
        "operationId" : "getFunctionStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FunctionStats"
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "404" : {
            "description" : "The function doesn't exist"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/status" : {
      "get" : {
        "tags" : [ "functions" ],
        "summary" : "Displays the status of a Pulsar Function",
        "description" : "",
        "operationId" : "getFunctionStatus",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FunctionStatus"
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "404" : {
            "description" : "The function doesn't exist"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/stop" : {
      "post" : {
        "tags" : [ "functions" ],
        "summary" : "Stop all function instances",
        "description" : "",
        "operationId" : "stopFunction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request"
          },
          "404" : {
            "description" : "The function does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/trigger" : {
      "post" : {
        "tags" : [ "functions" ],
        "summary" : "Triggers a Pulsar Function with a user-specified value or file data",
        "description" : "",
        "operationId" : "triggerFunction",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Message"
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "404" : {
            "description" : "The function does not exist"
          },
          "408" : {
            "description" : "Request timeout"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/{instanceId}/restart" : {
      "post" : {
        "tags" : [ "functions" ],
        "summary" : "Restart function instance",
        "description" : "",
        "operationId" : "restartFunction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request"
          },
          "404" : {
            "description" : "The function does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/{instanceId}/start" : {
      "post" : {
        "tags" : [ "functions" ],
        "summary" : "Start function instance",
        "description" : "",
        "operationId" : "startFunction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request"
          },
          "404" : {
            "description" : "The function does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/{instanceId}/stats" : {
      "get" : {
        "tags" : [ "functions" ],
        "summary" : "Displays the stats of a Pulsar Function instance",
        "description" : "",
        "operationId" : "getFunctionInstanceStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FunctionInstanceStatsData"
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "404" : {
            "description" : "The function doesn't exist"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/{instanceId}/status" : {
      "get" : {
        "tags" : [ "functions" ],
        "summary" : "Displays the status of a Pulsar Function instance",
        "description" : "",
        "operationId" : "getFunctionInstanceStatus",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FunctionInstanceStatusData"
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "403" : {
            "description" : "The requester doesn't have admin permissions"
          },
          "404" : {
            "description" : "The function doesn't exist"
          }
        }
      }
    },
    "/functions/{tenant}/{namespace}/{functionName}/{instanceId}/stop" : {
      "post" : {
        "tags" : [ "functions" ],
        "summary" : "Stop function instance",
        "description" : "",
        "operationId" : "stopFunction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid request"
          },
          "404" : {
            "description" : "The function does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    }
  },
  "definitions" : {
    "ConsumerConfig" : {
      "type" : "object",
      "properties" : {
        "schemaType" : {
          "type" : "string"
        },
        "serdeClassName" : {
          "type" : "string"
        },
        "receiverQueueSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "regexPattern" : {
          "type" : "boolean"
        }
      }
    },
    "EncryptionContext" : {
      "type" : "object",
      "properties" : {
        "keys" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/EncryptionKey"
          }
        },
        "param" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "algorithm" : {
          "type" : "string"
        },
        "compressionType" : {
          "type" : "string",
          "enum" : [ "NONE", "LZ4", "ZLIB", "ZSTD", "SNAPPY" ]
        },
        "uncompressedMessageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "batchSize" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "EncryptionKey" : {
      "type" : "object",
      "properties" : {
        "keyValue" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "metadata" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ExceptionInformation" : {
      "type" : "object",
      "properties" : {
        "exceptionString" : {
          "type" : "string"
        },
        "timestampMs" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "FunctionConfig" : {
      "type" : "object",
      "properties" : {
        "runtimeFlags" : {
          "type" : "string"
        },
        "tenant" : {
          "type" : "string"
        },
        "namespace" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "className" : {
          "type" : "string"
        },
        "inputs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "customSerdeInputs" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "topicsPattern" : {
          "type" : "string"
        },
        "customSchemaInputs" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "inputSpecs" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/ConsumerConfig"
          }
        },
        "output" : {
          "type" : "string"
        },
        "outputSchemaType" : {
          "type" : "string"
        },
        "outputSerdeClassName" : {
          "type" : "string"
        },
        "logTopic" : {
          "type" : "string"
        },
        "processingGuarantees" : {
          "type" : "string",
          "enum" : [ "ATLEAST_ONCE", "ATMOST_ONCE", "EFFECTIVELY_ONCE" ]
        },
        "retainOrdering" : {
          "type" : "boolean"
        },
        "userConfig" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "secrets" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "runtime" : {
          "type" : "string",
          "enum" : [ "JAVA", "PYTHON", "GO" ]
        },
        "autoAck" : {
          "type" : "boolean"
        },
        "maxMessageRetries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "deadLetterTopic" : {
          "type" : "string"
        },
        "subName" : {
          "type" : "string"
        },
        "parallelism" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resources" : {
          "$ref" : "#/definitions/Resources"
        },
        "fqfn" : {
          "type" : "string"
        },
        "windowConfig" : {
          "$ref" : "#/definitions/WindowConfig"
        },
        "timeoutMs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jar" : {
          "type" : "string"
        },
        "py" : {
          "type" : "string"
        },
        "go" : {
          "type" : "string"
        },
        "cleanupSubscription" : {
          "type" : "boolean"
        }
      }
    },
    "FunctionInstanceStats" : {
      "type" : "object",
      "properties" : {
        "instanceId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "metrics" : {
          "$ref" : "#/definitions/FunctionInstanceStatsData"
        }
      }
    },
    "FunctionInstanceStatsData" : {
      "type" : "object",
      "properties" : {
        "receivedTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "processedSuccessfullyTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "systemExceptionsTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userExceptionsTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "avgProcessLatency" : {
          "type" : "number",
          "format" : "double"
        },
        "1min" : {
          "$ref" : "#/definitions/FunctionInstanceStatsDataBase"
        },
        "lastInvocation" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userMetrics" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "number",
            "format" : "double"
          }
        }
      }
    },
    "FunctionInstanceStatsDataBase" : {
      "type" : "object",
      "properties" : {
        "receivedTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "processedSuccessfullyTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "systemExceptionsTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userExceptionsTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "avgProcessLatency" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "FunctionInstanceStatus" : {
      "type" : "object",
      "properties" : {
        "instanceId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "status" : {
          "$ref" : "#/definitions/FunctionInstanceStatusData"
        }
      }
    },
    "FunctionInstanceStatusData" : {
      "type" : "object",
      "properties" : {
        "running" : {
          "type" : "boolean"
        },
        "error" : {
          "type" : "string"
        },
        "numRestarts" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numReceived" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numSuccessfullyProcessed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numUserExceptions" : {
          "type" : "integer",
          "format" : "int64"
        },
        "latestUserExceptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExceptionInformation"
          }
        },
        "numSystemExceptions" : {
          "type" : "integer",
          "format" : "int64"
        },
        "latestSystemExceptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExceptionInformation"
          }
        },
        "averageLatency" : {
          "type" : "number",
          "format" : "double"
        },
        "lastInvocationTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "workerId" : {
          "type" : "string"
        }
      }
    },
    "FunctionState" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "stringValue" : {
          "type" : "string"
        },
        "numberValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "FunctionStats" : {
      "type" : "object",
      "properties" : {
        "receivedTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "processedSuccessfullyTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "systemExceptionsTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userExceptionsTotal" : {
          "type" : "integer",
          "format" : "int64"
        },
        "avgProcessLatency" : {
          "type" : "number",
          "format" : "double"
        },
        "1min" : {
          "$ref" : "#/definitions/FunctionInstanceStatsDataBase"
        },
        "lastInvocation" : {
          "type" : "integer",
          "format" : "int64"
        },
        "instances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FunctionInstanceStats"
          }
        }
      }
    },
    "FunctionStatus" : {
      "type" : "object",
      "properties" : {
        "numInstances" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numRunning" : {
          "type" : "integer",
          "format" : "int32"
        },
        "instances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FunctionInstanceStatus"
          }
        }
      }
    },
    "Message" : {
      "type" : "object",
      "properties" : {
        "producerName" : {
          "type" : "string"
        },
        "messageId" : {
          "$ref" : "#/definitions/MessageId"
        },
        "sequenceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "orderingKey" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "encryptionCtx" : {
          "$ref" : "#/definitions/EncryptionContext"
        },
        "redeliveryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "schemaVersion" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "publishTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "eventTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "topicName" : {
          "type" : "string"
        },
        "keyBytes" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "value" : {
          "type" : "object"
        },
        "key" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "MessageId" : {
      "type" : "object"
    },
    "Resources" : {
      "type" : "object",
      "properties" : {
        "cpu" : {
          "type" : "number",
          "format" : "double"
        },
        "ram" : {
          "type" : "integer",
          "format" : "int64"
        },
        "disk" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "WindowConfig" : {
      "type" : "object",
      "properties" : {
        "windowLengthCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "windowLengthDurationMs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "slidingIntervalCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "slidingIntervalDurationMs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lateDataTopic" : {
          "type" : "string"
        },
        "maxLagMs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "watermarkEmitIntervalMs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timestampExtractorClassName" : {
          "type" : "string"
        },
        "actualWindowFunctionClassName" : {
          "type" : "string"
        }
      }
    }
  }
}